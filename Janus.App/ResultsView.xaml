<UserControl x:Class="Janus.App.ResultsView"
    xmlns:local="clr-namespace:Janus.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="900">
  <UserControl.Resources>
    <local:StringNotEmptyToVisibleConverter x:Key="StringNotEmptyToVisible" />
    <local:FirstLineConverter x:Key="FirstLineConverter" />
    <local:LogLevelSelectedConverter x:Key="LogLevelSelectedConverter" />
  </UserControl.Resources>
  <Grid Margin="20">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <!-- Metadata Panel -->
    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0">
      <TextBlock Text="Machine: " FontWeight="Bold"/>
      <TextBlock Text="{Binding Metadata.MachineName}" Margin="5,0,10,0"/>
      <TextBlock Text="Notes: " FontWeight="Bold"/>
      <TextBlock Text="{Binding Metadata.UserNotes}" Margin="5,0,10,0"/>
      <TextBlock Text="Scan Timestamp: " FontWeight="Bold"/>
      <TextBlock Text="{Binding MetadataTimestampLocal}" Margin="5,0,10,0"/>
      <TextBlock Text="Window: " FontWeight="Bold"/>
      <TextBlock Text="{Binding Metadata.Window}" Margin="5,0,10,0"/>
      <TextBlock Text="Snapshot Created: " FontWeight="Bold"/>
      <TextBlock Text="{Binding MetadataSnapshotCreatedLocal}" Margin="5,0,10,0"/>
      <TextBlock Text="Minutes Before: " FontWeight="Bold"/>
      <TextBlock Text="{Binding Metadata.MinutesBefore}" Margin="5,0,10,0"/>
      <TextBlock Text="Minutes After: " FontWeight="Bold"/>
      <TextBlock Text="{Binding Metadata.MinutesAfter}" Margin="5,0,10,0"/>
    </StackPanel>
    <!-- Filters and Status -->
    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,0,0,10">
      <TextBlock Text="Results:" FontWeight="Bold" FontSize="16" Margin="0,0,10,0"/>
      <TextBlock Text="{Binding EventCount, StringFormat='({0} events found)'}" FontWeight="Bold" Margin="0,0,10,0"/>
      <!-- Log Level Multi-Select Combo -->
      <TextBlock Text="Log Level:" VerticalAlignment="Center" Margin="0,0,10,0"/>
      <ComboBox Width="180" Height="28" IsEditable="False" HorizontalAlignment="Left" VerticalAlignment="Center"
                      ItemsSource="{Binding LogLevels}"
                      IsDropDownOpen="{Binding IsLogLevelPopupOpen, Mode=TwoWay}"
                      StaysOpenOnEdit="True"
                      Padding="0">
        <ComboBox.Template>
          <ControlTemplate TargetType="ComboBox">
            <Grid>
              <ToggleButton IsChecked="{Binding IsLogLevelPopupOpen, Mode=TwoWay}" Focusable="False" Background="White" BorderBrush="#888" BorderThickness="1" Height="28" VerticalAlignment="Center">
                <ContentPresenter Content="{Binding SelectedLogLevelsDisplay}" VerticalAlignment="Center" Margin="6,0,0,0"/>
              </ToggleButton>
              <Popup Placement="Bottom" IsOpen="{Binding IsLogLevelPopupOpen, Mode=TwoWay}" StaysOpen="False">
                <Border Background="White" BorderBrush="#888" BorderThickness="1" Padding="4">
                  <ItemsControl ItemsSource="{Binding LogLevels}">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <CheckBox Content="{Binding}"
                                                          IsChecked="{Binding DataContext.SelectedLogLevels, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource LogLevelSelectedConverter}, ConverterParameter={x:Null}}"
                                                          Command="{Binding DataContext.ToggleLogLevelCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                          CommandParameter="{Binding}"/>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                </Border>
              </Popup>
            </Grid>
          </ControlTemplate>
        </ComboBox.Template>
      </ComboBox>
      <TextBlock Text="Search:" VerticalAlignment="Center" Margin="20,0,10,0"/>
      <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Width="180"/>
      <CheckBox Content="Group by Log" IsChecked="{Binding IsGroupingEnabled}" Margin="20,0,0,0" VerticalAlignment="Center"/>
      <Button Content="Save Snapshot" Command="{Binding SaveSnapshotCommand}" Width="120" Margin="20,0,0,0"/>
    </StackPanel>
    <!-- Progress/Status -->
    <TextBlock Grid.Row="2" Text="{Binding ScanStatus}" FontWeight="Bold" Foreground="DarkBlue" Margin="0,0,0,10"/>
    <!-- DataGrid and Details Split Panels -->
    <Grid Grid.Row="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="6"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <DataGrid Grid.Row="0"
                      ItemsSource="{Binding EventsView}"
                      SelectedItem="{Binding SelectedEvent, Mode=TwoWay}"
                      AutoGenerateColumns="False"
                      Margin="0,0,0,0"
                      RowHeight="28">
        <DataGrid.RowStyle>
          <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding Level}" Value="Critical">
                <Setter Property="Background" Value="#FFF8D7DA"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Error">
                <Setter Property="Background" Value="#FFFDE2E2"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Warning">
                <Setter Property="Background" Value="#FFFFF8E1"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Information">
                <Setter Property="Background" Value="#FFE8F6FF"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Verbose">
                <Setter Property="Background" Value="#FFF3F3F3"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </DataGrid.RowStyle>
        <DataGrid.GroupStyle>
          <GroupStyle>
            <GroupStyle.HeaderTemplate>
              <DataTemplate>
                <TextBlock FontWeight="Bold" FontSize="14" Foreground="DarkSlateGray" Text="{Binding Name}" Margin="4,0,0,0"/>
              </DataTemplate>
            </GroupStyle.HeaderTemplate>
          </GroupStyle>
        </DataGrid.GroupStyle>
        <DataGrid.Columns>
          <DataGridTextColumn Header="Time" Binding="{Binding TimeCreated, Mode=OneWay}" Width="150" IsReadOnly="True"/>
          <DataGridTextColumn Header="Log" Binding="{Binding LogName, Mode=OneWay}" Width="120" IsReadOnly="True"/>
          <DataGridTextColumn Header="Level" Binding="{Binding Level, Mode=OneWay}" Width="80" IsReadOnly="True"/>
          <DataGridTextColumn Header="Source" Binding="{Binding Source, Mode=OneWay}" Width="120" IsReadOnly="True"/>
          <DataGridTextColumn Header="EventId" Binding="{Binding EventId, Mode=OneWay}" Width="80" IsReadOnly="True"/>
          <DataGridTextColumn Header="Message" Width="*"
        IsReadOnly="True">
            <DataGridTextColumn.Binding>
              <Binding Path="Message" Mode="OneWay">
                <Binding.Converter>
                  <local:FirstLineConverter />
                </Binding.Converter>
              </Binding>
            </DataGridTextColumn.Binding>
          </DataGridTextColumn>
        </DataGrid.Columns>
      </DataGrid>
      <GridSplitter Grid.Row="1" Height="6" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#DDD" ShowsPreview="True" />
      <Grid Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="1*" MinWidth="120" />
          <ColumnDefinition Width="6" />
          <ColumnDefinition Width="2*" MinWidth="200" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" VerticalAlignment="Stretch" Margin="0,0,0,0">
          <TextBlock FontWeight="SemiBold">
            <Run Text="Time: "/>
            <Run Text="{Binding SelectedEvent.TimeCreated, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Log: "/>
            <Run Text="{Binding SelectedEvent.LogName, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Level: "/>
            <Run Text="{Binding SelectedEvent.Level, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Source: "/>
            <Run Text="{Binding SelectedEvent.Source, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="EventId: "/>
            <Run Text="{Binding SelectedEvent.EventId, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Machine: "/>
            <Run Text="{Binding SelectedEvent.MachineName, Mode=OneWay}"/>
          </TextBlock>
        </StackPanel>
        <GridSplitter Grid.Column="1" Width="6" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#DDD" ShowsPreview="True" />
        <TextBox Grid.Column="2"
         Text="{Binding SelectedEvent.Message, Mode=OneWay}"
         IsReadOnly="True"
         AcceptsReturn="True"
         TextWrapping="Wrap"
         FontFamily="Consolas"
         FontSize="12"
         VerticalScrollBarVisibility="Auto"
         HorizontalAlignment="Stretch"
         VerticalAlignment="Stretch"
         Margin="0,0,0,0"
         MinHeight="0"
         MinWidth="0"
         MaxWidth="Infinity"
         />
      </Grid>
    </Grid>
  </Grid>
</UserControl>
