<Window x:Class="Janus.App.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Janus.App.Views"
        mc:Ignorable="d"
        Title="Janus - Event Pinpointer"
        Height="700" Width="1200">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <GroupBox Header="Time Window" Grid.Row="0">
            <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Content="Timestamp of Interest:" VerticalAlignment="Center"/>
                    <DatePicker SelectedDate="{Binding SelectedDate}" VerticalAlignment="Center"/>
                    <TextBox Text="{Binding SelectedTime, UpdateSourceTrigger=PropertyChanged}" Width="80" VerticalAlignment="Center" Margin="5,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <Label Content="Minutes Before:"/>
                    <TextBox Text="{Binding MinutesBefore, UpdateSourceTrigger=PropertyChanged}" Width="50" VerticalAlignment="Center"/>
                    <Label Content="Minutes After:" Margin="10,0,0,0"/>
                    <TextBox Text="{Binding MinutesAfter, UpdateSourceTrigger=PropertyChanged}" Width="50" VerticalAlignment="Center"/>
                </StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="1" Content="Scan Events" Command="{Binding ScanCommand}" IsEnabled="{Binding !IsScanning}" HorizontalAlignment="Center" Margin="5" Padding="10,5"/>
                    <Button Grid.Column="1" Content="Cancel Scan" Command="{Binding CancelScanCommand}" IsEnabled="{Binding IsScanning}" HorizontalAlignment="Center" Margin="5" Padding="10,5" Visibility="{Binding IsScanning, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </StackPanel>
        </GroupBox>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="200"/>
            </Grid.RowDefinitions>

            <GroupBox Header="Results" Grid.Row="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <Label Content="Filter (by level):"/>
                        <TextBox Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" Width="100"/>
                        <Label Content="Search:" Margin="10,0,0,0"/>
                        <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" Width="200"/>
                        <Label Content="{Binding FilteredEvents.Count, StringFormat={}{0} events found}" Margin="10,0,0,0"/>
                        <CheckBox Content="Group by Log Name" IsChecked="{Binding IsGroupingEnabled}" Margin="20,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ListView Grid.Row="1" ItemsSource="{Binding FilteredEvents}" SelectedItem="{Binding SelectedEvent}">
                        <ListView.GroupStyle>
                            <GroupStyle x:Name="LogGroupStyle">
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" Text="{Binding Name}"/>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Time" Width="150" DisplayMemberBinding="{Binding TimeCreated}"/>
                                <GridViewColumn Header="Level" Width="100" DisplayMemberBinding="{Binding LevelDisplayName}"/>
                                <GridViewColumn Header="Provider" Width="200" DisplayMemberBinding="{Binding ProviderName}"/>
                                <GridViewColumn Header="Event ID" Width="100" DisplayMemberBinding="{Binding EventId}"/>
                                <GridViewColumn Header="Task" Width="150" DisplayMemberBinding="{Binding TaskDisplayName}"/>
                                <GridViewColumn Header="Log Name" Width="150" DisplayMemberBinding="{Binding LogName}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </GroupBox>

            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"/>

            <GroupBox Header="Event Details" Grid.Row="2">
                <TextBox Text="{Binding SelectedEvent.Message, Mode=OneWay}" IsReadOnly="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>
            </GroupBox>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StatusBar Grid.Column="0">
                <StatusBarItem>
                    <TextBlock Text="{Binding ProgressText}"/>
                </StatusBarItem>
                <StatusBarItem HorizontalAlignment="Right">
                    <ProgressBar IsIndeterminate="{Binding IsScanning}" Width="200" Height="15"/>
                </StatusBarItem>
            </StatusBar>

            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                <Button Content="Save Snapshot" Width="120" Margin="0,0,10,0" Command="{Binding SaveSnapshotCommand}"/>
                <Button Content="Load Snapshot" Width="120" Command="{Binding LoadSnapshotCommand}"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>

