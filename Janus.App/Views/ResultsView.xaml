<UserControl x:Class="Janus.App.ResultsView"
    xmlns:local="clr-namespace:Janus.App"
    xmlns:controls="clr-namespace:Janus.App.Controls"
    xmlns:helpers="clr-namespace:Janus.App.Helpers"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
    mc:Ignorable="d"
    d:DesignHeight="400" d:DesignWidth="900">
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BoolToVis" />
    <local:StringNotEmptyToVisibleConverter x:Key="StringNotEmptyToVisible" />
    <local:FirstLineConverter x:Key="FirstLineConverter" />
    <local:LogLevelSelectedConverter x:Key="LogLevelSelectedConverter" />
    <local:BooleanToGridLengthConverter x:Key="BoolToGridLength" ExpandedWidth="260" CollapsedWidth="0" />
    <local:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <helpers:ScanIdCheckedMultiConverter x:Key="ScanIdCheckedMultiConverter" />
    <helpers:ScanStatusToBrushConverter x:Key="ScanStatusToBrushConverter" />
    <GroupStyle x:Key="MyEventGroupStyle">
      <GroupStyle.HeaderTemplate>
        <DataTemplate>
          <TextBlock FontWeight="Bold" FontSize="14" Foreground="DarkSlateGray" Text="{Binding Name}" Margin="4,0,0,0"/>
        </DataTemplate>
      </GroupStyle.HeaderTemplate>
    </GroupStyle>
  </UserControl.Resources>
  <Grid Margin="8">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="32"/>
      <ColumnDefinition Width="{Binding IsExpanded, ElementName=MetadataExpander, Converter={StaticResource BoolToGridLength}}"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="280"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <!-- Expander Header Only -->
    <Expander x:Name="MetadataExpander" Grid.Column="0" Grid.Row="0" Grid.RowSpan="4" 
              IsExpanded="False" VerticalAlignment="Top" Margin="0,0,0,0" ExpandDirection="Right">
      <Expander.Header>
        <TextBlock Text="Metadata" FontWeight="Bold">
          <TextBlock.LayoutTransform>
            <RotateTransform Angle="90" />
          </TextBlock.LayoutTransform>
        </TextBlock>
      </Expander.Header>
    </Expander>
    <!-- Metadata Panel Content: Grouped and compact layout, with compacted rows and notes at the bottom -->
    <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="4" Margin="0,0,4,0">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/> <!-- Metadata group -->
        <RowDefinition Height="*"/>   <!-- ScannedSources list -->
        <RowDefinition Height="Auto"/> <!-- Notes -->
      </Grid.RowDefinitions>
      <!-- Grouped metadata fields: single column, label and value in one TextBlock, wrapping enabled -->
      <GroupBox Header="Details" Grid.Row="0" Padding="2" Margin="0,0,0,8">
        <StackPanel>
          <TextBlock TextWrapping="Wrap">
            <Run Text="Machine: " FontWeight="Bold"/>
            <Run Text="{Binding Metadata.MachineName, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock TextWrapping="Wrap">
            <Run Text="Window: " FontWeight="Bold"/>
            <Run Text="{Binding Metadata.Window, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock TextWrapping="Wrap">
            <Run Text="Scan Timestamp: " FontWeight="Bold"/>
            <Run Text="{Binding MetadataTimestampLocal, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock TextWrapping="Wrap">
            <Run Text="Snapshot Created: " FontWeight="Bold"/>
            <Run Text="{Binding MetadataSnapshotCreatedLocal, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock TextWrapping="Wrap">
            <Run Text="Minutes Before: " FontWeight="Bold"/>
            <Run Text="{Binding Metadata.MinutesBefore, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock TextWrapping="Wrap">
            <Run Text="Minutes After: " FontWeight="Bold"/>
            <Run Text="{Binding Metadata.MinutesAfter, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock TextWrapping="Wrap" Visibility="{Binding SnapshotFilePath, Converter={StaticResource StringNotEmptyToVisible}}">
            <Run Text="Snapshot Path: " FontWeight="Bold"/>
            <Run Text="{Binding ContractedSnapshotFilePath, Mode=OneWay}"/>
          </TextBlock>
        </StackPanel>
      </GroupBox>
      <!-- ScannedSources List: fills remaining space, scrollable -->
      <ListBox ItemsSource="{Binding ScannedSources}" Grid.Row="1"
               VirtualizingPanel.IsVirtualizing="True"
               VirtualizingPanel.VirtualizationMode="Recycling"
               ScrollViewer.CanContentScroll="True"
               BorderThickness="0"
               SelectionMode="Single"
               HorizontalContentAlignment="Stretch"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled"
               ToolTip="Sources scanned">
        <ListBox.ItemTemplate>
          <DataTemplate>
            <Grid Margin="0,0,0,1">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <StackPanel Orientation="Horizontal" Grid.Column="0" VerticalAlignment="Center">
                <ContentControl Margin="0,0,6,0" VerticalAlignment="Center">
                  <ContentControl.Style>
                    <Style TargetType="ContentControl">
                      <Setter Property="ContentTemplate">
                        <Setter.Value>
                          <DataTemplate>
                            <Ellipse Width="12" Height="12" Fill="Gray"/>
                          </DataTemplate>
                        </Setter.Value>
                      </Setter>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Success">
                          <Setter Property="ContentTemplate">
                            <Setter.Value>
                              <DataTemplate>
                                <Path Data="M2,7 L6,11 L14,3" Stroke="Green" StrokeThickness="2" Fill="Transparent" Width="12" Height="12"/>
                              </DataTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Partial">
                          <Setter Property="ContentTemplate">
                            <Setter.Value>
                              <DataTemplate>
                                <Path Data="M2,7 L12,7" Stroke="Orange" StrokeThickness="2" Fill="Transparent" Width="12" Height="12"/>
                              </DataTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Status}" Value="Failed">
                          <Setter Property="ContentTemplate">
                            <Setter.Value>
                              <DataTemplate>
                                <Path Data="M3,3 L11,11 M11,3 L3,11" Stroke="Red" StrokeThickness="2" Fill="Transparent" Width="12" Height="12"/>
                              </DataTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </ContentControl.Style>
                </ContentControl>
                <Border Background="#FFE0E0E0" CornerRadius="3" Margin="0,0,6,0" Padding="2,0,2,0" 
                        VerticalAlignment="Center" MinWidth="32">
                  <TextBlock Text="{Binding EventsRetrieved}" FontSize="9"
                             VerticalAlignment="Center" Foreground="Black"/>
                </Border>
              </StackPanel>
              <TextBlock Grid.Column="1" Text="{Binding SourceName}" FontSize="10" TextWrapping="Wrap" VerticalAlignment="Center" />
            </Grid>
          </DataTemplate>
        </ListBox.ItemTemplate>
      </ListBox>
      
      <!-- Notes at the bottom with a darker background -->
      <Border Grid.Row="2" Background="#FFE8E8E8" CornerRadius="4" Padding="6" Margin="0,8,0,0">
        <StackPanel>
          <TextBlock Text="Notes:" FontWeight="Bold"/>
          <TextBlock Text="{Binding Metadata.UserNotes}" TextWrapping="Wrap"/>
        </StackPanel>
      </Border>
    </Grid>
    <!-- Scanned Sources Grid -->
    <!-- Filters and Status -->
    <!-- Right-side filter panel -->
    <Border Grid.Column="3" Grid.Row="0" Grid.RowSpan="4" Margin="4,0,0,0" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="1" CornerRadius="6">
      <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Height="Auto" MinHeight="200">
        <StackPanel Margin="4" VerticalAlignment="Stretch">
          <!-- Log Level MultiSelect -->
          <controls:AdvancedMultiSelect
            Header="Log Level"
            ItemsSource="{Binding LogLevels}"
            SelectedItems="{Binding SelectedLogLevels, Mode=TwoWay}"
            ItemCountProvider="{Binding LogLevelCountProvider}"
            PlaceholderText="Search log levels..."
            Margin="0,0,0,6"/>
          <Border Height="1" Background="Gray" Margin="0,3,0,3"/>
          <!-- Source MultiSelect -->
          <controls:AdvancedMultiSelect
            Header="Source"
            ItemsSource="{Binding Sources}"
            SelectedItems="{Binding SelectedSources, Mode=TwoWay}"
            ItemCountProvider="{Binding SourceCountProvider}"
            PlaceholderText="Search sources..."
            Margin="0,0,0,6"/>
          <Border Height="1" Background="Gray" Margin="0,3,0,3"/>
          <!-- Log Name MultiSelect -->
          <controls:AdvancedMultiSelect
            Header="Log"
            ItemsSource="{Binding LogNames}"
            SelectedItems="{Binding SelectedLogNames, Mode=TwoWay}"
            ItemCountProvider="{Binding LogNameCountProvider}"
            PlaceholderText="Search logs..."
            Margin="0,0,0,6"/>
          <Border Height="1" Background="Gray" Margin="0,3,0,3"/>
          <!-- Message Search -->
          <controls:TextBoxWithPlaceholder
              Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
              Placeholder="Filter event messages..."
              Width="Auto" Margin="0,0,0,8" />
          <!-- Show Only Checked -->
          <CheckBox Content="Show Only Checked"
                    IsChecked="{Binding ShowOnlyChecked, Mode=TwoWay}"
                    IsEnabled="{Binding HasCheckedRows}"
                    ToolTip="Show only checked rows (if any are checked)"/>
          <!-- Placeholder for future time filter UI -->
          <Border Height="40" Margin="0,12,0,0" Background="#EEE" CornerRadius="4" VerticalAlignment="Top">
            <TextBlock Text="(Time filter coming soon)" Foreground="Gray" VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </Border>
          <!-- Grouping -->
          <Border BorderBrush="Red" BorderThickness="2" CornerRadius="4" Margin="0,0,0,8">
            <StackPanel Orientation="Vertical" Margin="8">
              <TextBlock Text="These are very slow and should be used with caution." 
                         FontWeight="Bold"
                         Foreground="Red" FontSize="12" Margin="0,0,8,0"
                         TextWrapping="Wrap" />
              <CheckBox Content="Group by Log" IsChecked="{Binding IsGroupingEnabled}" Margin="0,0,8,0"
                        IsEnabled="{Binding IsGroupByLevelEnabled, Converter={StaticResource InverseBooleanConverter}}"/>
              <CheckBox Content="Group by Level" IsChecked="{Binding IsGroupByLevelEnabled}"
                        IsEnabled="{Binding IsGroupingEnabled, Converter={StaticResource InverseBooleanConverter}}"/>
            </StackPanel>
          </Border>
        </StackPanel>
      </ScrollViewer>
    </Border>
    <!-- Progress/Status -->
    <TextBlock Grid.Column="2" Grid.Row="1" Text="{Binding ScanStatus}" FontWeight="Bold" Foreground="DarkBlue" Margin="0,0,0,10"/>
    <!-- DataGrid and Details Split Panels -->
    <Grid Grid.Column="2" Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="6"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <DataGrid x:Name="ResultsDataGrid" Grid.Row="0"
                ItemsSource="{Binding EventsView}"
                SelectedItem="{Binding SelectedEvent, Mode=TwoWay}"
                AutoGenerateColumns="False"
                Margin="0,0,0,0"
                RowHeight="28"
                MinHeight="120"
                EnableRowVirtualization="True"
                EnableColumnVirtualization="True"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                Visibility="{Binding HasEvents, Converter={StaticResource BoolToVis}}"
                KeyboardNavigation.TabIndex="1"
                KeyDown="ResultsDataGrid_KeyDown">
        <i:Interaction.Behaviors>
          <local:DataGridGroupStyleBehavior 
                GroupStyle="{StaticResource MyEventGroupStyle}"
                IsEnabled="{Binding IsAnyGroupingEnabled}" />
        </i:Interaction.Behaviors>
        <DataGrid.RowStyle>
          <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding Level}" Value="Critical">
                <Setter Property="Background" Value="#FFF8D7DA"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Error">
                <Setter Property="Background" Value="#FFFDE2E2"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Warning">
                <Setter Property="Background" Value="#FFFFF8E1"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Information">
                <Setter Property="Background" Value="#FFE8F6FF"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding Level}" Value="Verbose">
                <Setter Property="Background" Value="#FFF3F3F3"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </DataGrid.RowStyle>
        <DataGrid.Columns>
          <DataGridTemplateColumn Header="✔" Width="32">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <CheckBox
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Command="{Binding DataContext.ToggleCheckedCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                  CommandParameter="{Binding}">
                  <CheckBox.IsChecked>
                    <MultiBinding Converter="{StaticResource ScanIdCheckedMultiConverter}" Mode="OneWay">
                      <Binding Path="DataContext.CheckedScanEventIds" RelativeSource="{RelativeSource AncestorType=UserControl}" Mode="OneWay" />
                      <Binding Path="ScanEventId" Mode="OneWay" />
                    </MultiBinding>
                  </CheckBox.IsChecked>
                </CheckBox>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTextColumn Header="#" Binding="{Binding ScanEventId}" Width="Auto" IsReadOnly="True"/>
          <DataGridTextColumn Header="Time" Binding="{Binding TimeCreatedIso}" Width="Auto" IsReadOnly="True"/>
          <DataGridTextColumn Header="Log" Binding="{Binding LogName}" Width="Auto" IsReadOnly="True"/>
          <DataGridTextColumn Header="Level" Binding="{Binding Level}" Width="Auto" IsReadOnly="True"/>
          <DataGridTextColumn Header="Source" Binding="{Binding Source}" Width="Auto" IsReadOnly="True"/>
          <DataGridTextColumn Header="EventId" Binding="{Binding EventId}" Width="Auto" IsReadOnly="True"/>
          <DataGridTextColumn Header="Message" Width="*" IsReadOnly="True">
            <DataGridTextColumn.Binding>
              <Binding Path="Message" Mode="OneWay">
                <Binding.Converter>
                  <local:FirstLineConverter />
                </Binding.Converter>
              </Binding>
            </DataGridTextColumn.Binding>
          </DataGridTextColumn>
        </DataGrid.Columns>
      </DataGrid>
      <!-- Add this TextBlock as a placeholder -->
      <TextBlock Grid.Row="0"
             Text="No events match the current filter."
             FontSize="16"
             Foreground="Gray"
             HorizontalAlignment="Center"
             VerticalAlignment="Center">
        <TextBlock.Style>
          <Style TargetType="TextBlock">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
              <!-- This trigger makes the TextBlock visible only when HasEvents is false -->
              <DataTrigger Binding="{Binding HasEvents}" Value="False">
                <Setter Property="Visibility" Value="Visible" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBlock.Style>
      </TextBlock>
      <GridSplitter Grid.Row="1" Height="6" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#DDD" ShowsPreview="True" AutomationProperties.Name="hSplitter" />
      <Grid Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="1*" MinWidth="120" />
          <ColumnDefinition Width="6" />
          <ColumnDefinition Width="2*" MinWidth="200" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" VerticalAlignment="Stretch" Margin="0,0,0,0">
          <TextBlock FontWeight="SemiBold">
            <Run Text="Time: "/>
            <Run Text="{Binding SelectedEvent.TimeCreated, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Log: "/>
            <Run Text="{Binding SelectedEvent.LogName, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Level: "/>
            <Run Text="{Binding SelectedEvent.Level, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Source: "/>
            <Run Text="{Binding SelectedEvent.Source, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="EventId: "/>
            <Run Text="{Binding SelectedEvent.EventId, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock>
            <Run Text="Machine: "/>
            <Run Text="{Binding SelectedEvent.MachineName, Mode=OneWay}"/>
          </TextBlock>
        </StackPanel>
        <GridSplitter Grid.Column="1" Width="6" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#DDD" ShowsPreview="True" AutomationProperties.Name="vSplitter" />
        <TextBlock Grid.Column="2"
                   TextWrapping="Wrap"
                   FontFamily="Consolas"
                   FontSize="12"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   Margin="0,0,0,0"
                   MinHeight="0"
                   MinWidth="0"
                   MaxWidth="Infinity"
                   TextTrimming="CharacterEllipsis"
                   ScrollViewer.VerticalScrollBarVisibility="Auto"
                   helpers:InlineHelper.InlinesSource="{Binding SelectedEvent.MessageInlines}" />
      </Grid>
    </Grid>
    <!-- Save Snapshot button at bottom right -->
    <Button x:Name="SaveSnapshotButton" Grid.Column="2" Grid.Row="4" Content="_Save Snapshot" Command="{Binding SaveSnapshotCommand}" Width="120" Margin="0,10,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Right" IsEnabled="{Binding CanSaveSnapshot}" IsDefault="True"/>
    <!-- Back button at bottom left -->
    <Button x:Name="BackButton" Grid.Column="2" Grid.Row="4" Content="_Back" Command="{Binding BackCommand}" Width="80" Margin="0,10,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Left" IsCancel="True"/>
    <!-- Copy Message button -->
    <Button x:Name="CopyMessageButton" Grid.Column="2" Grid.Row="4" Content="_Copy Message" Command="{Binding CopyMessageCommand}" Width="120" Margin="140,10,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
  </Grid>
</UserControl>
